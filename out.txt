g++ -w *.cpp -L /usr/lib/ -lboost_system -lboost_thread -lpthread
client.cpp: In constructor 'client::client(boost::asio::ip::tcp::socket, char*)':
client.cpp:3:50: error: no matching function for call to 'boost::asio::basic_stream_socket<boost::asio::ip::tcp>::basic_stream_socket()'
    3 | client::client(tcp::socket soc, char* spreadsheet){
      |                                                  ^
In file included from /usr/include/boost/asio/basic_socket_streambuf.hpp:25,
                 from /usr/include/boost/asio/basic_socket_iostream.hpp:24,
                 from /usr/include/boost/asio.hpp:33,
                 from client.h:5,
                 from client.cpp:1:
/usr/include/boost/asio/basic_stream_socket.hpp:292:3: note: candidate: 'template<class Protocol1, class Executor1> boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(boost::asio::basic_stream_socket<Protocol1, Executor1>&&, typename std::enable_if<(std::is_convertible<Protocol1, Protocol>::value && std::is_convertible<_Ep, _Dp>::value)>::type*)'
  292 |   basic_stream_socket(basic_stream_socket<Protocol1, Executor1>&& other,
      |   ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:292:3: note:   template argument deduction/substitution failed:
client.cpp:3:50: note:   candidate expects 2 arguments, 0 provided
    3 | client::client(tcp::socket soc, char* spreadsheet){
      |                                                  ^
In file included from /usr/include/boost/asio/basic_socket_streambuf.hpp:25,
                 from /usr/include/boost/asio/basic_socket_iostream.hpp:24,
                 from /usr/include/boost/asio.hpp:33,
                 from client.h:5,
                 from client.cpp:1:
/usr/include/boost/asio/basic_stream_socket.hpp:257:3: note: candidate: 'boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(boost::asio::basic_stream_socket<Protocol, Executor>&&) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor]'
  257 |   basic_stream_socket(basic_stream_socket&& other)
      |   ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:257:3: note:   candidate expects 1 argument, 0 provided
/usr/include/boost/asio/basic_stream_socket.hpp:236:3: note: candidate: 'template<class ExecutionContext> boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(ExecutionContext&, const protocol_type&, const native_handle_type&, typename std::enable_if<std::is_convertible<ExecutionContext&, boost::asio::execution_context&>::value>::type*)'
  236 |   basic_stream_socket(ExecutionContext& context,
      |   ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:236:3: note:   template argument deduction/substitution failed:
client.cpp:3:50: note:   candidate expects 4 arguments, 0 provided
    3 | client::client(tcp::socket soc, char* spreadsheet){
      |                                                  ^
In file included from /usr/include/boost/asio/basic_socket_streambuf.hpp:25,
                 from /usr/include/boost/asio/basic_socket_iostream.hpp:24,
                 from /usr/include/boost/asio.hpp:33,
                 from client.h:5,
                 from client.cpp:1:
/usr/include/boost/asio/basic_stream_socket.hpp:214:3: note: candidate: 'boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(const executor_type&, const protocol_type&, const native_handle_type&) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; boost::asio::basic_stream_socket<Protocol, Executor>::executor_type = boost::asio::executor; boost::asio::basic_stream_socket<Protocol, Executor>::protocol_type = boost::asio::ip::tcp; boost::asio::basic_stream_socket<Protocol, Executor>::native_handle_type = int]'
  214 |   basic_stream_socket(const executor_type& ex,
      |   ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:214:3: note:   candidate expects 3 arguments, 0 provided
/usr/include/boost/asio/basic_stream_socket.hpp:192:3: note: candidate: 'template<class ExecutionContext> boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(ExecutionContext&, const endpoint_type&, typename std::enable_if<std::is_convertible<ExecutionContext&, boost::asio::execution_context&>::value>::type*)'
  192 |   basic_stream_socket(ExecutionContext& context, const endpoint_type& endpoint,
      |   ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:192:3: note:   template argument deduction/substitution failed:
client.cpp:3:50: note:   candidate expects 3 arguments, 0 provided
    3 | client::client(tcp::socket soc, char* spreadsheet){
      |                                                  ^
In file included from /usr/include/boost/asio/basic_socket_streambuf.hpp:25,
                 from /usr/include/boost/asio/basic_socket_iostream.hpp:24,
                 from /usr/include/boost/asio.hpp:33,
                 from client.h:5,
                 from client.cpp:1:
/usr/include/boost/asio/basic_stream_socket.hpp:170:3: note: candidate: 'boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(const executor_type&, const endpoint_type&) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; boost::asio::basic_stream_socket<Protocol, Executor>::executor_type = boost::asio::executor; boost::asio::basic_stream_socket<Protocol, Executor>::endpoint_type = boost::asio::ip::basic_endpoint<boost::asio::ip::tcp>]'
  170 |   basic_stream_socket(const executor_type& ex, const endpoint_type& endpoint)
      |   ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:170:3: note:   candidate expects 2 arguments, 0 provided
/usr/include/boost/asio/basic_stream_socket.hpp:147:3: note: candidate: 'template<class ExecutionContext> boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(ExecutionContext&, const protocol_type&, typename std::enable_if<std::is_convertible<ExecutionContext&, boost::asio::execution_context&>::value>::type*)'
  147 |   basic_stream_socket(ExecutionContext& context, const protocol_type& protocol,
      |   ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:147:3: note:   template argument deduction/substitution failed:
client.cpp:3:50: note:   candidate expects 3 arguments, 0 provided
    3 | client::client(tcp::socket soc, char* spreadsheet){
      |                                                  ^
In file included from /usr/include/boost/asio/basic_socket_streambuf.hpp:25,
                 from /usr/include/boost/asio/basic_socket_iostream.hpp:24,
                 from /usr/include/boost/asio.hpp:33,
                 from client.h:5,
                 from client.cpp:1:
/usr/include/boost/asio/basic_stream_socket.hpp:128:3: note: candidate: 'boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(const executor_type&, const protocol_type&) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; boost::asio::basic_stream_socket<Protocol, Executor>::executor_type = boost::asio::executor; boost::asio::basic_stream_socket<Protocol, Executor>::protocol_type = boost::asio::ip::tcp]'
  128 |   basic_stream_socket(const executor_type& ex, const protocol_type& protocol)
      |   ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:128:3: note:   candidate expects 2 arguments, 0 provided
/usr/include/boost/asio/basic_stream_socket.hpp:108:12: note: candidate: 'template<class ExecutionContext> boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(ExecutionContext&, typename std::enable_if<std::is_convertible<ExecutionContext&, boost::asio::execution_context&>::value>::type*)'
  108 |   explicit basic_stream_socket(ExecutionContext& context,
      |            ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:108:12: note:   template argument deduction/substitution failed:
client.cpp:3:50: note:   candidate expects 2 arguments, 0 provided
    3 | client::client(tcp::socket soc, char* spreadsheet){
      |                                                  ^
In file included from /usr/include/boost/asio/basic_socket_streambuf.hpp:25,
                 from /usr/include/boost/asio/basic_socket_iostream.hpp:24,
                 from /usr/include/boost/asio.hpp:33,
                 from client.h:5,
                 from client.cpp:1:
/usr/include/boost/asio/basic_stream_socket.hpp:92:12: note: candidate: 'boost::asio::basic_stream_socket<Protocol, Executor>::basic_stream_socket(const executor_type&) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; boost::asio::basic_stream_socket<Protocol, Executor>::executor_type = boost::asio::executor]'
   92 |   explicit basic_stream_socket(const executor_type& ex)
      |            ^~~~~~~~~~~~~~~~~~~
/usr/include/boost/asio/basic_stream_socket.hpp:92:12: note:   candidate expects 1 argument, 0 provided
In file included from /usr/include/c++/9/bits/stl_map.h:63,
                 from /usr/include/c++/9/map:61,
                 from spreadsheet.h:4,
                 from spreadsheet.cpp:1:
/usr/include/c++/9/tuple: In instantiation of 'std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {char* const&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = char* const; _T2 = cell]':
/usr/include/c++/9/tuple:1663:63:   required from 'std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {char* const&}; _Args2 = {}; _T1 = char* const; _T2 = cell]'
/usr/include/c++/9/ext/new_allocator.h:147:4:   required from 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<char* const, cell>; _Args = {const std::piecewise_construct_t&, std::tuple<char* const&>, std::tuple<>}; _Tp = std::_Rb_tree_node<std::pair<char* const, cell> >]'
/usr/include/c++/9/bits/alloc_traits.h:484:4:   required from 'static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<char* const, cell>; _Args = {const std::piecewise_construct_t&, std::tuple<char* const&>, std::tuple<>}; _Tp = std::_Rb_tree_node<std::pair<char* const, cell> >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<std::_Rb_tree_node<std::pair<char* const, cell> > >]'
/usr/include/c++/9/bits/stl_tree.h:614:32:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<char* const&>, std::tuple<>}; _Key = char*; _Val = std::pair<char* const, cell>; _KeyOfValue = std::_Select1st<std::pair<char* const, cell> >; _Compare = std::less<char*>; _Alloc = std::allocator<std::pair<char* const, cell> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<char* const, cell> >*]'
/usr/include/c++/9/bits/stl_tree.h:631:4:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<char* const&>, std::tuple<>}; _Key = char*; _Val = std::pair<char* const, cell>; _KeyOfValue = std::_Select1st<std::pair<char* const, cell> >; _Compare = std::less<char*>; _Alloc = std::allocator<std::pair<char* const, cell> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<char* const, cell> >*]'
/usr/include/c++/9/bits/stl_tree.h:2455:13:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_emplace_hint_unique(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<char* const&>, std::tuple<>}; _Key = char*; _Val = std::pair<char* const, cell>; _KeyOfValue = std::_Select1st<std::pair<char* const, cell> >; _Compare = std::less<char*>; _Alloc = std::allocator<std::pair<char* const, cell> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::pair<char* const, cell> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<char* const, cell> >]'
/usr/include/c++/9/bits/stl_map.h:499:8:   required from 'std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = char*; _Tp = cell; _Compare = std::less<char*>; _Alloc = std::allocator<std::pair<char* const, cell> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = cell; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = char*]'
spreadsheet.cpp:11:17:   required from here
/usr/include/c++/9/tuple:1674:70: error: no matching function for call to 'cell::cell()'
 1674 |         second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
      |                                                                      ^
In file included from spreadsheet.h:7,
                 from spreadsheet.cpp:1:
cell.h:8:3: note: candidate: 'cell::cell(char*, char*)'
    8 |   cell(char* contents, char* cellName);
      |   ^~~~
cell.h:8:3: note:   candidate expects 2 arguments, 0 provided
cell.h:6:7: note: candidate: 'cell::cell(const cell&)'
    6 | class cell{
      |       ^~~~
cell.h:6:7: note:   candidate expects 1 argument, 0 provided
cell.h:6:7: note: candidate: 'cell::cell(cell&&)'
cell.h:6:7: note:   candidate expects 1 argument, 0 provided
make: *** [Makefile:5: no-warnings] Error 1
